package golang

// Find the Difference
// leetCode: https://leetcode-cn.com/problems/find-the-difference/
// You are given two strings s and t.
// String t is generated by random shuffling string s and then add one more letter at a random position.
// Return the letter that was added to t.

func FindTheDifference(s, t string) (B byte) {
	sMap := make(map[byte]int)
	tMap := make(map[byte]int)
	for i := 0; i < len(t); i++ {
		if i < len(s) {
			sMap[s[i]]++
		}
		tMap[t[i]]++
	}
	for k, v := range tMap {
		if sMap[k] != v {
			B = k
		}
	}
	return
}

// 计数法
func FindTheDifference2(s, t string) byte {
	cnt := [26]int{}
	for _, ch := range s {
		cnt[ch - 'a']++
	}
	for i := 0; ; i++ {
		ch := t[i]
		cnt[ch - 'a']--
		if cnt[ch - 'a'] < 0 {
			return ch
		}
	}
}

// 求和
func FindTheDifference3(s, t string) byte {
	sum := 0
	for _, ch := range s {
		sum -= int(ch)
	}
	for _, ch := range t {
		sum += int(ch)
	}
	return byte(sum)
}

// 位运算^异或
func FindTheDifference4(s, t string)(B byte) {
	for i := range s {
		B ^= s[i] ^ t[i]
	}
	return B ^ t[len(t)-1]
}